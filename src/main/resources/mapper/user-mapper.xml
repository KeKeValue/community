<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.nowcoder.community.dao.UserMapper">

    <sql id="insertField">
        username, password, salt, email, type, status, activation_code, header_url, create_time
    </sql>

    <sql id="selectField">
        id, username, password, salt, email, type, status, activation_code, header_url, create_time
    </sql>

    <!--查询一般需要声明返回值类型-->
    <!--id要写对应的方法名 #{id}表示要引用selectById方法的参数-->
    <select id="selectById" resultType="User">
        select <include refid="selectField"></include>
        from user
        where id = #{id};
    </select>

    <select id="selectByName" resultType="User">
        select <include refid="selectField"></include>
        from user
        where username = #{username};
    </select>

    <select id="selectByEmail" resultType="User">
        select <include refid="selectField"></include>
        from user
        where email = #{email};
    </select>

    <!--insert一般需要声明参数类型-->
    <!--增加的时候, MySQL底层会自动生成id, MyBatis会得到这个id填入User里需要知道填入的属性keyProperty="id"-->
    <insert id="insertUser" parameterType="User" keyProperty="id">
        insert into user (<include refid="insertField"></include>)
        values (#{username}, #{password}, #{salt}, #{email}, #{type}, #{status}, #{activationCode}, #{headerUrl}, #{createTime})
    </insert>

    <!--update一般需要声明参数类型 只改了一个字段，参数比较简单，不声明了-->
    <update id="updateStatus">
        update user set status = #{status} where id = #{id}
    </update>

    <update id="updateHeader">
        update user set header_url = #{headerUrl} where id = #{id}
    </update>

    <update id="updatePassword">
        update user set password = #{password} where id = #{id}
    </update>
</mapper>